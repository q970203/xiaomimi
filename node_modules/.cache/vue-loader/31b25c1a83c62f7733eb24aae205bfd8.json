{"remainingRequest":"F:\\前端\\mi\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\前端\\mi\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\前端\\mi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\前端\\mi\\src\\pages\\Home.vue?vue&type=template&id=5a90ec03&","dependencies":[{"path":"F:\\前端\\mi\\src\\pages\\Home.vue","mtime":1585554395529},{"path":"F:\\前端\\mi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\前端\\mi\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\前端\\mi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\前端\\mi\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
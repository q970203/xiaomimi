{"remainingRequest":"F:\\前端\\mi\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!F:\\前端\\mi\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\前端\\mi\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\前端\\mi\\node_modules\\bm-vlogin\\components\\bm_phone_login\\bm_phone_login.vue?vue&type=template&id=ba39a652&scoped=true&","dependencies":[{"path":"F:\\前端\\mi\\node_modules\\bm-vlogin\\components\\bm_phone_login\\bm_phone_login.vue","mtime":499162500000},{"path":"F:\\前端\\mi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\前端\\mi\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"F:\\前端\\mi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\前端\\mi\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAicGhvbmVMb2dpbiIgfSwKICAgIFsKICAgICAgX3ZtLl90KCJoZWFkZXIiLCBbX2MoImgyIiwgW192bS5fdigi5omL5py655m75b2VIildKV0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImlucHV0X3dyYXBwZXIiIH0sIFsKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogImlucHV0SXRlbSIsCiAgICAgICAgICAgIGNsYXNzOiB7CiAgICAgICAgICAgICAgZm9jdXM6IF92bS5pc0ZvY3VzLnBob25lTnVtLAogICAgICAgICAgICAgIHBob25lX2VtcHR5OiBfdm0uZXJyb3JGbGFnLnBob25lX2VtcHR5LAogICAgICAgICAgICAgIHBob25lX2Vycm9yOiBfdm0uZXJyb3JGbGFnLnBob25lX2VycgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJjaG9vc2VBcmVhIiwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmNob29zZUFyZWEoKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfdm0uX3QoImNvdW50cnlfdGVsIiwgW192bS5fdigiKzg2IildKSwKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAic3ZnIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImljb24iLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgdDogIjE1NjY2NDAyMTMzODgiLAogICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94OiAiMCAwIDEwMjQgMTAyNCIsCiAgICAgICAgICAgICAgICAgICAgICAgIHZlcnNpb246ICIxLjEiLAogICAgICAgICAgICAgICAgICAgICAgICB4bWxuczogImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwKICAgICAgICAgICAgICAgICAgICAgICAgInAtaWQiOiAiMjc4NyIsCiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMTgiLAogICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6ICIxOCIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJwYXRoIiwgewogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgIGQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiTTUxMiA3MjEuNWMtNC42IDAtOS4yLTEuOC0xMi43LTUuM2wtMzgzLjEtMzgzYy03LTctNy0xOC40IDAtMjUuNXMxOC40LTcgMjUuNSAwTDUxMiA2NzguMWwzNzAuMy0zNzAuM2M3LTcgMTguNC03IDI1LjUgMCA3IDcgNyAxOC40IDAgMjUuNWwtMzgzLjEgMzgzYy0zLjUgMy41LTguMSA1LjItMTIuNyA1LjJ6IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAicC1pZCI6ICIyNzg4IgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIDIKICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpbnB1dENvbnRlbnQiIH0sIFsKICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmlucHV0X2luZm8ucGhvbmUsCiAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImlucHV0X2luZm8ucGhvbmUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICByZWY6ICJwaG9uZU51bSIsCiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICB0eXBlOiAidGV4dCIsCiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi6K+36L6T5YWl5omL5py65Y+3IiwKICAgICAgICAgICAgICAgICAgbWF4bGVuZ3RoOiAiMTMiLAogICAgICAgICAgICAgICAgICBhdXRvZm9jdXM6ICIiCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5pbnB1dF9pbmZvLnBob25lIH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBmb2N1czogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5mb2N1cygicGhvbmVOdW0iKQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBibHVyOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmJsdXIoInBob25lTnVtIikKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAga2V5dXA6IF92bS5pbnB1dFBob25lLAogICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmlucHV0X2luZm8sICJwaG9uZSIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdKQogICAgICAgICAgXQogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbnB1dEl0ZW0gY29kZUlucHV0IiwKICAgICAgICAgICAgY2xhc3M6IHsKICAgICAgICAgICAgICBmb2N1czogX3ZtLmlzRm9jdXMuY29kZSwKICAgICAgICAgICAgICBjb2RlX2VtcHR5OiBfdm0uZXJyb3JGbGFnLmNvZGVfZW1wdHksCiAgICAgICAgICAgICAgY29kZV9lcnJvcjogX3ZtLmVycm9yRmxhZy5jb2RlX2VycgogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImlucHV0Q29udGVudCAiIH0sIFsKICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmlucHV0X2luZm8uY29kZSwKICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiaW5wdXRfaW5mby5jb2RlIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgcmVmOiAiY29kZSIsCiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICBpZDogImlucHV0X2NvZGUiLAogICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogIuivt+i+k+WFpemqjOivgeeggSIsCiAgICAgICAgICAgICAgICAgIG1heGxlbmd0aDogX3ZtLm1Db25maWdzLmNvZGVfbGVuZ3RoCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5pbnB1dF9pbmZvLmNvZGUgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGZvY3VzOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmZvY3VzKCJjb2RlIikKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgYmx1cjogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5ibHVyKCJjb2RlIikKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAga2V5dXA6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uYWN0aXZlTG9naW4oKQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmlucHV0X2luZm8sICJjb2RlIiwgJGV2ZW50LnRhcmdldC52YWx1ZSkKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImdldENvZGVCdG4iIH0sIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICByZWY6ICJnZXRDb2RlIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZGlzYWJsZWQ6IF92bS5nZXRDb2RlRGlzYWJsZWQgfSwKICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmdldFZlcmlmeUNvZGUoKQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoX3ZtLl9zKF92bS5nZXRDb2RlQnRuVGV4dCkpXQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0KICAgICAgICApCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgWwogICAgICAgIF9jKAogICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibG9naW5CdG4iLAogICAgICAgICAgICBjbGFzczogewogICAgICAgICAgICAgIG9wdF9idXR0b246ICFfdm0uaXNMb2dpbkZvcmJpZGRlbiwKICAgICAgICAgICAgICBmb3JiaWRkZW46IF92bS5pc0xvZ2luRm9yYmlkZGVuCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGF0dHJzOiB7IGRpc2FibGVkOiBfdm0uaXNMb2dpbkZvcmJpZGRlbiB9LAogICAgICAgICAgICBvbjogewogICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdm0ubG9naW4oKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5tQ29uZmlncy5sb2dpbl9idG5fdmFsdWUpICsgIiAiKV0KICAgICAgICApCiAgICAgIF0pLAogICAgICBfdm0ubUNvbmZpZ3MuYWNjb3VudExvZ2luCiAgICAgICAgPyBfYygKICAgICAgICAgICAgImJ1dHRvbiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImFjY291bnRMb2dpbiIsCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kZW1pdCgiYWNjb3VudExvZ2luIikKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIiDnlKjotKblj7flr4bnoIHnmbvlvZUgIildCiAgICAgICAgICApCiAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXBzIiB9LCBbCiAgICAgICAgX3ZtLm1Db25maWdzLmNoYW5nZWRQaG9uZQogICAgICAgICAgPyBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImNoYW5nZWRQaG9uZSIsCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kZW1pdCgiY2hhbmdlZFBob25lIikKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgW192bS5fdigiIOaJi+acuuWPt+W3suabtOaNoiAiKV0KICAgICAgICAgICAgKQogICAgICAgICAgOiBfdm0uX2UoKQogICAgICBdKSwKICAgICAgX3ZtLm1Db25maWdzLm90aGVyTG9naW5XYXlzCiAgICAgICAgPyBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uaGlkZUZvb3RlciwKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImhpZGVGb290ZXIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm90aGVyTG9naW5XYXlzIgogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX3ZtLl9tKDApLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiaWNvbnMiIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF92bS5fdCgib3RoZXJMb2dpbldheXNfaWNvbnMiLCBbCiAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaWNvbiIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWFnZXMvaWNvbl9RUS5wbmciKSwKICAgICAgICAgICAgICAgICAgICAgICAgYWx0OiAicXFMb2dpbiIKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kZW1pdCgicXFfbG9naW4iKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaWNvbiIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWFnZXMvaWNvbl93ZWl4aW4ucG5nIiksCiAgICAgICAgICAgICAgICAgICAgICAgIGFsdDogIndlaXhpbkxvZ2luIgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLiRlbWl0KCJ3ZWl4aW5fbG9naW4iKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaWNvbiIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9pbWFnZXMvaWNvbl93ZWliby5wbmciKSwKICAgICAgICAgICAgICAgICAgICAgICAgYWx0OiAid2VpYm9Mb2dpbiIKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kZW1pdCgid2VpYm9fbG9naW4iKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAyCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgX3ZtLm1Db25maWdzLnByb3RvY29sCiAgICAgICAgPyBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uaGlkZUZvb3RlciwKICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImhpZGVGb290ZXIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInByb3RvY29sIgogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX3ZtLl92KCIg55m75b2V5rOo5YaM5Y2z5Luj6KGo6ZiF6K+75bm25ZCM5oSPIiksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAic3BhbiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS4kZW1pdCgidG9Qcm90b2NvbCIpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgW192bS5fdigi55So5oi35pyN5Yqh5Y2P6K6uIildCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgOiBfdm0uX2UoKQogICAgXSwKICAgIDIKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbigpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib3RoZXJXYXlUZXh0V3JhcHBlciIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm90aGVyV2F5VGV4dCIgfSwgW192bS5fdigi5YW25LuW55m75b2V5pa55byPIildKQogICAgXSkKICB9Cl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}